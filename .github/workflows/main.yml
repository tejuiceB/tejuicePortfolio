name: Portfolio CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check code style
      run: |
        npm run lint || true
        
    - name: Build project
      run: npm run build
      
    - name: Run tests
      run: npm test || true
      
    - name: Cache build artifacts
      uses: actions/cache@v3
      with:
        path: |
          .next
          node_modules
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to Vercel
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      run: |
        npm i -g vercel
        vercel deploy --prod --token=$VERCEL_TOKEN

    - name: Notify deployment status
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const { status } = context;
          const emoji = status === 'success' ? '✅' : '❌';
          const message = `${emoji} Deployment ${status}`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });
